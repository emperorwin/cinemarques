-- Criação das tabelas
CREATE TABLE COLABORADORES (
ID INTEGER PRIMARY KEY AUTOINCREMENT,
NOME TEXT NOT NULL,
CPF TEXT UNIQUE NOT NULL,
SEXO TEXT NOT NULL CHECK(SEXO IN ('M', 'F')),
DATA_NASC TEXT NOT NULL,
ENDERECO TEXT NOT NULL,
TELEFONE TEXT NOT NULL,
USUARIO TEXT UNIQUE NOT NULL,
SENHA TEXT NOT NULL,
ADMIN BOOLEAN DEFAULT 0
);

CREATE TABLE EVENTOS(
ID INTEGER PRIMARY KEY AUTOINCREMENT,
DESCRICAO TEXT NOT NULL,
HORARIO TEXT NOT NULL,
DATA TEXT NOT NULL
);

CREATE TABLE CADEIRA(
ID INTEGER PRIMARY KEY AUTOINCREMENT,
NUM INTEGER NOT NULL,
FILEIRA INTEGER NOT NULL,
UNIQUE (NUM, FILEIRA)
);

CREATE TABLE CLIENTE (
ID INTEGER PRIMARY KEY AUTOINCREMENT,
NOME TEXT NOT NULL,
TEL TEXT NOT NULL
);

CREATE TABLE RESERVA(
ID INTEGER PRIMARY KEY AUTOINCREMENT,
DATA TEXT NOT NULL,
DATA_ATUAL TEXT DEFAULT (date('now')),
ID_CLIENTE INTEGER NOT NULL,
ID_COLABORADOR INTEGER NOT NULL,
ID_EVENTO INTEGER NOT NULL,
ID_CADEIRA INTEGER NOT NULL,
FOREIGN KEY (ID_COLABORADOR) REFERENCES COLABORADORES(ID),
FOREIGN KEY (ID_EVENTO) REFERENCES EVENTOS(ID),
FOREIGN KEY (ID_CADEIRA) REFERENCES CADEIRA(ID),
FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID),
UNIQUE (ID_EVENTO, ID_CADEIRA) -- apenas uma reserva, por cadeira, por evento
);

-- Dados de demonstração

INSERT INTO COLABORADORES (NOME, CPF, SEXO, DATA_NASC, ENDERECO, TELEFONE, USUARIO, SENHA, ADMIN) VALUES
('Admin', '00000000000', 'M', '2000-01-01', 'Rua Admin, 123', '9999999999', 'admin', 'admin', 1),
('Funcionario', '11111111111', 'F', '2001-02-02', 'Rua Func, 456', '8888888888', 'func', 'func', 0),
('Funcionario2', '22222222222', 'M', '2002-03-03', 'Rua Func, 789', '7777777777', 'func2', 'func2', 0);

INSERT INTO CLIENTE (NOME, TEL) VALUES
('Maria', '1234567890'),
('Jose', '0987654321'),
('Bob', '1122334455');

INSERT INTO EVENTOS (DESCRICAO, HORARIO, DATA) VALUES
('Vingadores: Ultimato', '14:00', '2025-10-20'),
('Oppenheimer', '17:30', '2025-10-20'),
('Barbie', '20:00', '2025-10-20'),
('Duna: Parte 2', '22:30', '2025-10-20');


-- 8 fileiras (A-H), 10 assentos por fileira
-- Usando recursive CTE para gerar as cadeiras automaticamente
INSERT INTO CADEIRA (NUM, FILEIRA)
WITH RECURSIVE
  fileiras(f) AS (
    SELECT 1
    UNION ALL
    SELECT f + 1 FROM fileiras WHERE f < 8
  ),
  assentos(a) AS (
    SELECT 1
    UNION ALL
    SELECT a + 1 FROM assentos WHERE a < 10
  )
SELECT a.a, f.f
FROM assentos a
CROSS JOIN fileiras f
ORDER BY f.f, a.a;

-- Algumas reservas de exemplo
--  Cliente1 reservou assentos F5 e F6 (meio da sala)
INSERT INTO RESERVA (DATA, ID_CLIENTE, ID_COLABORADOR, ID_EVENTO, ID_CADEIRA) VALUES
('2025-10-20', 1, 1, 1, 55),  -- F5
('2025-10-20', 1, 1, 1, 56);  -- F6

-- Cliente2 reservou D7, D8, D9 (grupo de 3)
INSERT INTO RESERVA (DATA, ID_CLIENTE, ID_COLABORADOR, ID_EVENTO, ID_CADEIRA) VALUES
('2025-10-20', 2, 2, 2, 37),  -- D7
('2025-10-20', 2, 2, 2, 38),  -- D8
('2025-10-20', 2, 2, 2, 39);  -- D9

-- Cliente3 reservou C3 (assento individual)
INSERT INTO RESERVA (DATA, ID_CLIENTE, ID_COLABORADOR, ID_EVENTO, ID_CADEIRA) VALUES
('2025-10-20', 3, 1, 3, 23);  -- C3

